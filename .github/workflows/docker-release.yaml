name: Docker Release

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref_name }}
  cancel-in-progress: true

jobs:
  collect-apps:
    runs-on: ubuntu-latest
    outputs:
      app_matrix: ${{ steps.set-matrix.outputs.app_matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install jq
        uses: mbround18/gh-reusable/actions/install-cli@main
        with:
          repository: "jqlang/jq"
          asset: "jq-linux-amd64"
          override-name: "jq"

      - name: Find and process Cargo.toml files
        id: find-cargo-files
        run: |
          echo "Found the following Cargo.toml files in ./apps/:"
          find ./apps -name "Cargo.toml" -type f | tee /dev/tty

      - name: Extract package names and create matrix
        id: set-matrix
        run: |
          # Extract package names from Cargo.toml files
          app_names=$(find ./apps -name "Cargo.toml" -type f | xargs -I{} grep -l "^\[package\]" {} | xargs -I{} bash -c 'grep -m1 "^name" {} | sed -E "s/name[[:space:]]*=[[:space:]]*\"([^\"]*)\"/\1/"')

          # Use jq to create the JSON array of objects with 'name' property
          app_matrix=$(echo "$app_names" | grep -v '^$' | jq -R -s 'split("\n") | map(select(length > 0)) | map({"name": .})')

          echo "app_matrix=${app_matrix}" >> $GITHUB_OUTPUT
          echo "Generated matrix: ${app_matrix}"

  Release:
    needs: collect-apps
    strategy:
      matrix:
        include: ${{ fromJson(needs.collect-apps.outputs.app_matrix) }}
    uses: mbround18/gh-reusable/.github/workflows/docker-release.yaml@main
    with:
      image: mbround18/gsm-reference
      semver_prefix: ${{ matrix.name }}
    secrets:
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
